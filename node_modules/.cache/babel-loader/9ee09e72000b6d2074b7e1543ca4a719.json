{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport { ADDRESS, ABI } from './ABI';\nimport { hello, getPromotion, getPromotionWithBalances } from './helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Table1 extends React.Component {\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.testAlert = this.testAlert.bind(this);\n  }\n\n  testAlert(vari) {\n    // event.preventDefault();\n    // alert(\"hello \" + event.target.value);\n    console.log(vari);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider);\n    const chainId = await web3.eth.getChainId();\n    console.log(chainId);\n    this.setState({\n      accountInfo: ''\n    });\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    const accounts = await web3.eth.getAccounts(); // await GetAllPromoCodes(contractInstance);\n\n    var that = this;\n    var codeArray = [];\n    var promoOrigin = [];\n    var promo = [];\n    var promoDate = [];\n    var PromotionLimit = [];\n    promo = await getPromotionWithBalances(contractInstance, accounts[0]);\n    console.log(promo);\n    this.setState({\n      testData: promo\n    });\n    console.log(\"from Home\");\n    console.log(this.state.testData);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      testData: ''\n    }; // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n  }\n\n  render() {\n    const tableHeader = this.props.header;\n    var listData = this.state.testData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableHeader.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (() => {\n            {\n              console.log(\"List data is \");\n            }\n            {\n              console.log(listData);\n            }\n            const rows = [];\n\n            for (let i = 0; i < listData.length; i++) {\n              rows.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn\",\n                    title: \"top up promotion\",\n                    value: listData[i].couponCode,\n                    onClick: this.testAlert(\"hi\"),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-credit-card\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 150\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: listData[i].couponCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(listData[i].dateCreated * 1000).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: listData[i].targetAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: Web3.utils.fromWei(Web3.utils.toBN(listData[i].totalEth), \"ether\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance), \"ether\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(listData[i].startDate * 1000).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(listData[i].endDate * 1000).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: Web3.utils.fromWei(Web3.utils.toBN(listData[i].amtPerAddress), \"ether\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: Web3.utils.fromWei(Web3.utils.toBN(listData[i].minRedeemAmt), \"ether\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: Web3.utils.fromWei(Web3.utils.toBN(listData[i].maxRedeemAmt), \"ether\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 31\n              }, this));\n            }\n\n            return rows;\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Table1;","map":{"version":3,"sources":["/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js"],"names":["React","Component","Web3","ADDRESS","ABI","hello","getPromotion","getPromotionWithBalances","Table1","componentDidMount","loadBlockchainData","testAlert","bind","vari","console","log","web3","givenProvider","chainId","eth","getChainId","setState","accountInfo","contractInstance","Contract","accounts","getAccounts","that","codeArray","promoOrigin","promo","promoDate","PromotionLimit","testData","state","constructor","props","render","tableHeader","header","listData","map","rows","i","length","push","couponCode","Date","dateCreated","toLocaleString","targetAddress","utils","fromWei","toBN","totalEth","Balance","startDate","endDate","amtPerAddress","minRedeemAmt","maxRedeemAmt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,OAAR,EAAiBC,GAAjB,QAA2B,OAA3B;AACA,SAAQC,KAAR,EAAcC,YAAd,EAA2BC,wBAA3B,QAA0D,UAA1D;;;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACC,SAA3B,CAAsC;AAElCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,kBAAL;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,CAACE,IAAD,EAAM;AACb;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AAEuB,QAAlBH,kBAAkB,GAAG;AACzB,UAAMM,IAAI,GAAG,IAAId,IAAJ,CAASA,IAAI,CAACe,aAAd,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,UAAT,EAAtB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,SAAKG,QAAL,CAAc;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAd;AACA,QAAIC,gBAAgB,GAAG,IAAIP,IAAI,CAACG,GAAL,CAASK,QAAb,CAAsBpB,GAAtB,EAA2BD,OAA3B,CAAvB;AACA,UAAMsB,QAAQ,GAAG,MAAMT,IAAI,CAACG,GAAL,CAASO,WAAT,EAAvB,CANyB,CAOzB;;AAEA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,cAAc,GAAG,EAArB;AAEAF,IAAAA,KAAK,GAAG,MAAMvB,wBAAwB,CAACgB,gBAAD,EAAkBE,QAAQ,CAAC,CAAD,CAA1B,CAAtC;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACA,SAAKT,QAAL,CAAc;AAACY,MAAAA,QAAQ,EAACH;AAAV,KAAd;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,KAAL,CAAWD,QAAvB;AAED;;AAEHE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKF,KAAL,GAAa;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAAb,CAFe,CAGf;AACD;;AAIHI,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,GAAG,KAAKF,KAAL,CAAWG,MAA/B;AACA,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWD,QAA1B;AACA,wBACI;AAAA,6BACA;AAAO,QAAA,KAAK,EAAC,qBAAb;AAAA,gCACE;AAAA,iCACE;AAAA,sBACCK,WAAW,CAACG,GAAZ,CAAiBF,MAAD,iBAAY;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAA5B;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,oBACG,CAAC,MAAM;AACN;AAACzB,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA6B;AAClB;AAACD,cAAAA,OAAO,CAACC,GAAR,CAAYyB,QAAZ;AAAsB;AACjC,kBAAME,IAAI,GAAG,EAAb;;AACA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAC1CD,cAAAA,IAAI,CAACG,IAAL,eAAU;AAAA,wCACN;AAAA,yCAAI;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,KAAK,EAAC,KAA5B;AAAkC,oBAAA,KAAK,EAAC,kBAAxC;AAA2D,oBAAA,KAAK,EAAEL,QAAQ,CAACG,CAAD,CAAR,CAAYG,UAA9E;AAA0F,oBAAA,OAAO,EAAE,KAAKnC,SAAL,CAAe,IAAf,CAAnG;AAAA,2CAAyH;AAAG,sBAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAAzH;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBADM,eAEN;AAAA,4BAAK6B,QAAQ,CAACG,CAAD,CAAR,CAAYG;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAFM,eAGN;AAAA,4BAAK,IAAIC,IAAJ,CAASP,QAAQ,CAACG,CAAD,CAAR,CAAYK,WAAZ,GAA0B,IAAnC,EAAyCC,cAAzC;AAAL;AAAA;AAAA;AAAA;AAAA,wBAHM,eAIN;AAAA,4BAAKT,QAAQ,CAACG,CAAD,CAAR,CAAYO;AAAjB;AAAA;AAAA;AAAA;AAAA,wBAJM,eAKN;AAAA,4BAAKhD,IAAI,CAACiD,KAAL,CAAWC,OAAX,CAAmBlD,IAAI,CAACiD,KAAL,CAAWE,IAAX,CAAgBb,QAAQ,CAACG,CAAD,CAAR,CAAYW,QAA5B,CAAnB,EAAyD,OAAzD;AAAL;AAAA;AAAA;AAAA;AAAA,wBALM,eAON;AAAA,4BAAKpD,IAAI,CAACiD,KAAL,CAAWC,OAAX,CAAmBlD,IAAI,CAACiD,KAAL,CAAWE,IAAX,CAAgBb,QAAQ,CAACG,CAAD,CAAR,CAAYY,OAA5B,CAAnB,EAAwD,OAAxD;AAAL;AAAA;AAAA;AAAA;AAAA,wBAPM,eAQN;AAAA,4BAAK,IAAIR,IAAJ,CAASP,QAAQ,CAACG,CAAD,CAAR,CAAYa,SAAZ,GAAsB,IAA/B,EAAqCP,cAArC;AAAL;AAAA;AAAA;AAAA;AAAA,wBARM,eASN;AAAA,4BAAK,IAAIF,IAAJ,CAASP,QAAQ,CAACG,CAAD,CAAR,CAAYc,OAAZ,GAAoB,IAA7B,EAAmCR,cAAnC;AAAL;AAAA;AAAA;AAAA;AAAA,wBATM,eAUN;AAAA,4BAAK/C,IAAI,CAACiD,KAAL,CAAWC,OAAX,CAAmBlD,IAAI,CAACiD,KAAL,CAAWE,IAAX,CAAgBb,QAAQ,CAACG,CAAD,CAAR,CAAYe,aAA5B,CAAnB,EAA8D,OAA9D;AAAL;AAAA;AAAA;AAAA;AAAA,wBAVM,eAWN;AAAA,4BAAKxD,IAAI,CAACiD,KAAL,CAAWC,OAAX,CAAmBlD,IAAI,CAACiD,KAAL,CAAWE,IAAX,CAAgBb,QAAQ,CAACG,CAAD,CAAR,CAAYgB,YAA5B,CAAnB,EAA6D,OAA7D;AAAL;AAAA;AAAA;AAAA;AAAA,wBAXM,eAYN;AAAA,4BAAKzD,IAAI,CAACiD,KAAL,CAAWC,OAAX,CAAmBlD,IAAI,CAACiD,KAAL,CAAWE,IAAX,CAAgBb,QAAQ,CAACG,CAAD,CAAR,CAAYiB,YAA5B,CAAnB,EAA6D,OAA7D;AAAL;AAAA;AAAA;AAAA;AAAA,wBAZM;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAV;AAcC;;AACD,mBAAOlB,IAAP;AACH,WArBA;AADH;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAsCH;;AAtFiC;;AAyFtC,eAAelC,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport {ADDRESS, ABI} from './ABI'\nimport {hello,getPromotion,getPromotionWithBalances} from './helper';\n\nclass Table1 extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n        this.testAlert = this.testAlert.bind(this);\n      }\n\n      testAlert(vari){\n        // event.preventDefault();\n        // alert(\"hello \" + event.target.value);\n        console.log(vari);\n      }\n\n      async loadBlockchainData() {\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var codeArray = [];\n        var promoOrigin = [];\n        var promo = [];\n        var promoDate = [];\n        var PromotionLimit = [];\n    \n        promo = await getPromotionWithBalances(contractInstance,accounts[0]);\n        console.log(promo);\n        this.setState({testData:promo});\n        console.log(\"from Home\");\n        console.log(this.state.testData);\n    \n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {testData: ''};\n        // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n      }\n\n\n\n    render(){\n        const tableHeader = this.props.header;\n        var listData = this.state.testData;\n        return (\n            <>\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                {tableHeader.map((header) => <th>{header}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {(() => {\n                  {console.log(\"List data is \")}\n                              {console.log(listData)}\n                    const rows = [];\n                    for (let i = 0; i < listData.length; i++) {\n                    rows.push(<tr>\n                        <td><button type=\"button\" class=\"btn\" title=\"top up promotion\" value={listData[i].couponCode} onClick={this.testAlert(\"hi\")}><i class=\"fa fa-credit-card\"></i></button></td>\n                        <td>{listData[i].couponCode}</td>\n                        <td>{new Date(listData[i].dateCreated * 1000).toLocaleString()}</td>\n                        <td>{listData[i].targetAddress}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].totalEth),\"ether\")}</td>\n                        {/* <td>{listData[i].unspentEther}</td> */}\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].Balance),\"ether\")}</td>\n                        <td>{new Date(listData[i].startDate*1000).toLocaleString()}</td>\n                        <td>{new Date(listData[i].endDate*1000).toLocaleString()}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].amtPerAddress),\"ether\")}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].minRedeemAmt),\"ether\")}</td>\n                        <td>{Web3.utils.fromWei(Web3.utils.toBN(listData[i].maxRedeemAmt),\"ether\")}</td>\n                        </tr>);\n                    }\n                    return rows;\n                })()\n                }\n              </tbody>\n            </table>\n            {/* {JSON.stringify(listData)} */}\n\n          </>\n        );\n    }\n}\n\nexport default Table1;"]},"metadata":{},"sourceType":"module"}