{"ast":null,"code":"import Web3 from 'web3';\nexport function hello() {\n  alert('hello');\n}\nexport function getPromotion(contractInstance, account) {\n  return new Promise(function (resolve, reject) {\n    var codeArray = [];\n    contractInstance.getPastEvents('Promotion', {\n      filter: {\n        sponsorAddress: account\n      },\n      // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function (error, events) {\n      console.log(events);\n\n      if (events.length > 0) {\n        // console.log(events[0].returnValues); \n        for (var i = 0; i < events.length; i++) {\n          // Get promotional balance for all of them\n          events[i][\"Balance\"] = GetPromotionBalance(contractInstance, account, events[i][\"couponCode\"]).leftOver.toString();\n          console.log(events[i].returnValues);\n          codeArray.push(events[i].returnValues); // codeArray.push([events[i].returnValues.couponCode,events[i].returnValues.sponsorAddress,new Date(events[i].returnValues.dateCreated*1000),events[i].returnValues.targetAddress,Web3.utils.fromWei(events[i].returnValues.totalEth,\"ether\"),Web3.utils.fromWei(events[i].returnValues.amtPerAddress,\"ether\"),Web3.utils.fromWei(events[i].returnValues.minRedeemAmt,\"ether\"),Web3.utils.fromWei(events[i].returnValues.maxRedeemAmt,\"ether\"),new Date(events[i].returnValues.startDate*1000),new Date(events[i].returnValues.endDate*1000)]);\n        }\n\n        resolve(codeArray);\n      }\n    }).then(function (events) {});\n  });\n}\nexport function getPromotionForCouponHash(contractInstance, hash) {\n  return new Promise(function (resolve, reject) {\n    var codeArray = [];\n    contractInstance.getPastEvents('Promotion', {\n      filter: {\n        couponHash: hash\n      },\n      // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function (error, events) {\n      console.log(events);\n\n      if (events.length > 0) {\n        // console.log(events[0].returnValues); \n        // for(var i=0;i<events.length;i++){\n        codeArray.push(events[0].returnValues); // }\n\n        resolve(codeArray);\n      }\n    }).then(function (events) {});\n  });\n}\nexport function getRedeem(contractInstance, account) {\n  return new Promise(function (resolve, reject) {\n    var codeArray = [];\n    contractInstance.getPastEvents('Redeem', {\n      filter: {\n        user: account\n      },\n      // Using an array means OR: e.g. 20 or 23\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function (error, events) {\n      console.log(events);\n\n      if (events.length > 0) {\n        // console.log(events[0].returnValues);\n        for (var i = 0; i < events.length; i++) {\n          codeArray.push(events[i].returnValues);\n        }\n\n        resolve(codeArray);\n      }\n    }).then(function (events) {});\n  });\n}\nexport async function getRedeemCouponInfo(contractInstance, account) {\n  // return new Promise(function(resolve, reject) {\n  var redeems = await getRedeem(contractInstance, account);\n\n  for (var i = 0; i < redeems.length; i++) {\n    var couponInfo = await getPromotionForCouponHash(contractInstance, redeems[i][0]); // append promotion code,target account, starting date, ending date, amount redemmed, min coupon txn amount and max coupon txn amount\n\n    console.log(couponInfo);\n\n    if (couponInfo.length > 0) {\n      redeems[i][\"couponCode\"] = couponInfo[0].couponCode;\n      redeems[i][\"startDate\"] = couponInfo[0].startDate;\n      redeems[i][\"endDate\"] = couponInfo[0].endDate;\n      redeems[i][\"endDate\"] = couponInfo[0].endDate;\n      redeems[i][\"amtPerAddress\"] = couponInfo[0].amtPerAddress;\n      redeems[i][\"minRedeemAmt\"] = couponInfo[0].minRedeemAmt;\n      redeems[i][\"maxRedeemAmt\"] = couponInfo[0].maxRedeemAmt;\n      redeems[i][\"targetAddress\"] = couponInfo[0].targetAddress;\n    }\n  }\n\n  return redeems;\n}\nexport async function GetPromotionBalance(contractInstance, account, promoCode) {\n  var details = await contractInstance.checkPromotionalBalance.call(promoCode, {\n    from: account\n  });\n  return details;\n}\n_c = GetPromotionBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetPromotionBalance\");","map":{"version":3,"sources":["/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/helper.js"],"names":["Web3","hello","alert","getPromotion","contractInstance","account","Promise","resolve","reject","codeArray","getPastEvents","filter","sponsorAddress","fromBlock","toBlock","error","events","console","log","length","i","GetPromotionBalance","leftOver","toString","returnValues","push","then","getPromotionForCouponHash","hash","couponHash","getRedeem","user","getRedeemCouponInfo","redeems","couponInfo","couponCode","startDate","endDate","amtPerAddress","minRedeemAmt","maxRedeemAmt","targetAddress","promoCode","details","checkPromotionalBalance","call","from"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,SAASC,KAAT,GAAgB;AACnBC,EAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AAED,OAAO,SAASC,YAAT,CAAsBC,gBAAtB,EAAuCC,OAAvC,EAA+C;AAClD,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,QAAIC,SAAS,GAAG,EAAhB;AACAL,IAAAA,gBAAgB,CAACM,aAAjB,CAA+B,WAA/B,EAA4C;AACxCC,MAAAA,MAAM,EAAE;AAACC,QAAAA,cAAc,EAACP;AAAhB,OADgC;AACN;AAClCQ,MAAAA,SAAS,EAAE,CAF6B;AAGxCC,MAAAA,OAAO,EAAE;AAH+B,KAA5C,EAIG,UAASC,KAAT,EAAgBC,MAAhB,EAAuB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAGA,MAAM,CAACG,MAAP,GAAgB,CAAnB,EAAqB;AACnB;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,MAAM,CAACG,MAArB,EAA4BC,CAAC,EAA7B,EAAgC;AAE9B;AACAJ,UAAAA,MAAM,CAACI,CAAD,CAAN,CAAU,SAAV,IAAuBC,mBAAmB,CAACjB,gBAAD,EAAkBC,OAAlB,EAA0BW,MAAM,CAACI,CAAD,CAAN,CAAU,YAAV,CAA1B,CAAnB,CAAsEE,QAAtE,CAA+EC,QAA/E,EAAvB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACI,CAAD,CAAN,CAAUI,YAAtB;AACAf,UAAAA,SAAS,CAACgB,IAAV,CAAeT,MAAM,CAACI,CAAD,CAAN,CAAUI,YAAzB,EAL8B,CAM9B;AACD;;AACDjB,QAAAA,OAAO,CAACE,SAAD,CAAP;AACD;AACA,KAlBH,EAmBCiB,IAnBD,CAmBM,UAASV,MAAT,EAAgB,CACrB,CApBD;AAqBH,GAvBM,CAAP;AAwBH;AAED,OAAO,SAASW,yBAAT,CAAmCvB,gBAAnC,EAAoDwB,IAApD,EAAyD;AAC9D,SAAO,IAAItB,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,QAAIC,SAAS,GAAG,EAAhB;AACAL,IAAAA,gBAAgB,CAACM,aAAjB,CAA+B,WAA/B,EAA4C;AACxCC,MAAAA,MAAM,EAAE;AAACkB,QAAAA,UAAU,EAACD;AAAZ,OADgC;AACb;AAC3Bf,MAAAA,SAAS,EAAE,CAF6B;AAGxCC,MAAAA,OAAO,EAAE;AAH+B,KAA5C,EAIG,UAASC,KAAT,EAAgBC,MAAhB,EAAuB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAGA,MAAM,CAACG,MAAP,GAAgB,CAAnB,EAAqB;AACnB;AACA;AACEV,QAAAA,SAAS,CAACgB,IAAV,CAAeT,MAAM,CAAC,CAAD,CAAN,CAAUQ,YAAzB,EAHiB,CAInB;;AACAjB,QAAAA,OAAO,CAACE,SAAD,CAAP;AACD;AACA,KAbH,EAcCiB,IAdD,CAcM,UAASV,MAAT,EAAgB,CACrB,CAfD;AAgBH,GAlBM,CAAP;AAmBD;AAGD,OAAO,SAASc,SAAT,CAAmB1B,gBAAnB,EAAoCC,OAApC,EAA4C;AAC/C,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,QAAIC,SAAS,GAAG,EAAhB;AACAL,IAAAA,gBAAgB,CAACM,aAAjB,CAA+B,QAA/B,EAAyC;AACrCC,MAAAA,MAAM,EAAE;AAACoB,QAAAA,IAAI,EAAC1B;AAAN,OAD6B;AACb;AACxBQ,MAAAA,SAAS,EAAE,CAF0B;AAGrCC,MAAAA,OAAO,EAAE;AAH4B,KAAzC,EAIG,UAASC,KAAT,EAAgBC,MAAhB,EAAuB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAGA,MAAM,CAACG,MAAP,GAAgB,CAAnB,EAAqB;AACnB;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,MAAM,CAACG,MAArB,EAA4BC,CAAC,EAA7B,EAAgC;AAC9BX,UAAAA,SAAS,CAACgB,IAAV,CAAeT,MAAM,CAACI,CAAD,CAAN,CAAUI,YAAzB;AACD;;AACDjB,QAAAA,OAAO,CAACE,SAAD,CAAP;AACD;AACA,KAbH,EAcCiB,IAdD,CAcM,UAASV,MAAT,EAAgB,CACrB,CAfD;AAgBH,GAlBM,CAAP;AAmBH;AAED,OAAO,eAAegB,mBAAf,CAAmC5B,gBAAnC,EAAoDC,OAApD,EAA4D;AAC/D;AAEE,MAAI4B,OAAO,GAAG,MAAMH,SAAS,CAAC1B,gBAAD,EAAkBC,OAAlB,CAA7B;;AACA,OAAI,IAAIe,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACa,OAAO,CAACd,MAAtB,EAA6BC,CAAC,EAA9B,EAAiC;AAC/B,QAAIc,UAAU,GAAG,MAAMP,yBAAyB,CAACvB,gBAAD,EAAkB6B,OAAO,CAACb,CAAD,CAAP,CAAW,CAAX,CAAlB,CAAhD,CAD+B,CAE/B;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYgB,UAAZ;;AACA,QAAGA,UAAU,CAACf,MAAX,GAAoB,CAAvB,EAAyB;AACvBc,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,YAAX,IAA2Bc,UAAU,CAAC,CAAD,CAAV,CAAcC,UAAzC;AACAF,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,WAAX,IAA0Bc,UAAU,CAAC,CAAD,CAAV,CAAcE,SAAxC;AACAH,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,SAAX,IAAwBc,UAAU,CAAC,CAAD,CAAV,CAAcG,OAAtC;AACAJ,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,SAAX,IAAwBc,UAAU,CAAC,CAAD,CAAV,CAAcG,OAAtC;AACAJ,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,eAAX,IAA8Bc,UAAU,CAAC,CAAD,CAAV,CAAcI,aAA5C;AACAL,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,cAAX,IAA6Bc,UAAU,CAAC,CAAD,CAAV,CAAcK,YAA3C;AACAN,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,cAAX,IAA6Bc,UAAU,CAAC,CAAD,CAAV,CAAcM,YAA3C;AACAP,MAAAA,OAAO,CAACb,CAAD,CAAP,CAAW,eAAX,IAA8Bc,UAAU,CAAC,CAAD,CAAV,CAAcO,aAA5C;AACD;AACF;;AACD,SAAOR,OAAP;AACL;AAED,OAAO,eAAeZ,mBAAf,CAAmCjB,gBAAnC,EAAoDC,OAApD,EAA4DqC,SAA5D,EAAsE;AAC3E,MAAIC,OAAO,GAAG,MAAMvC,gBAAgB,CAACwC,uBAAjB,CAAyCC,IAAzC,CAA8CH,SAA9C,EAAwD;AAACI,IAAAA,IAAI,EAAEzC;AAAP,GAAxD,CAApB;AACA,SAAOsC,OAAP;AACD;KAHqBtB,mB","sourcesContent":["import Web3 from 'web3'\n\nexport function hello(){\n    alert('hello');\n}\n\nexport function getPromotion(contractInstance,account){\n    return new Promise(function(resolve, reject) {\n        var codeArray = [];\n        contractInstance.getPastEvents('Promotion', {\n            filter: {sponsorAddress:account}, // Using an array means OR: e.g. 20 or 23\n            fromBlock: 0,\n            toBlock: 'latest'\n        }, function(error, events){\n          console.log(events);\n          if(events.length > 0){\n            // console.log(events[0].returnValues); \n            for(var i=0;i<events.length;i++){\n              \n              // Get promotional balance for all of them\n              events[i][\"Balance\"] = GetPromotionBalance(contractInstance,account,events[i][\"couponCode\"]).leftOver.toString();\n              console.log(events[i].returnValues);\n              codeArray.push(events[i].returnValues);\n              // codeArray.push([events[i].returnValues.couponCode,events[i].returnValues.sponsorAddress,new Date(events[i].returnValues.dateCreated*1000),events[i].returnValues.targetAddress,Web3.utils.fromWei(events[i].returnValues.totalEth,\"ether\"),Web3.utils.fromWei(events[i].returnValues.amtPerAddress,\"ether\"),Web3.utils.fromWei(events[i].returnValues.minRedeemAmt,\"ether\"),Web3.utils.fromWei(events[i].returnValues.maxRedeemAmt,\"ether\"),new Date(events[i].returnValues.startDate*1000),new Date(events[i].returnValues.endDate*1000)]);\n            }\n            resolve(codeArray);            \n          }\n          })\n        .then(function(events){\n        });\n    });\n}\n\nexport function getPromotionForCouponHash(contractInstance,hash){\n  return new Promise(function(resolve, reject) {\n      var codeArray = [];\n      contractInstance.getPastEvents('Promotion', {\n          filter: {couponHash:hash}, // Using an array means OR: e.g. 20 or 23\n          fromBlock: 0,\n          toBlock: 'latest'\n      }, function(error, events){\n        console.log(events);\n        if(events.length > 0){\n          // console.log(events[0].returnValues); \n          // for(var i=0;i<events.length;i++){\n            codeArray.push(events[0].returnValues);\n          // }\n          resolve(codeArray);            \n        }\n        })\n      .then(function(events){\n      });\n  });\n}\n\n\nexport function getRedeem(contractInstance,account){\n    return new Promise(function(resolve, reject) {\n        var codeArray = [];\n        contractInstance.getPastEvents('Redeem', {\n            filter: {user:account}, // Using an array means OR: e.g. 20 or 23\n            fromBlock: 0,\n            toBlock: 'latest'\n        }, function(error, events){\n          console.log(events);\n          if(events.length > 0){\n            // console.log(events[0].returnValues);\n            for(var i=0;i<events.length;i++){\n              codeArray.push(events[i].returnValues);\n            } \n            resolve(codeArray);            \n          }\n          })\n        .then(function(events){\n        });\n    });\n}\n\nexport async function getRedeemCouponInfo(contractInstance,account){\n    // return new Promise(function(resolve, reject) {\n\n      var redeems = await getRedeem(contractInstance,account);\n      for(var i=0;i<redeems.length;i++){\n        var couponInfo = await getPromotionForCouponHash(contractInstance,redeems[i][0]);\n        // append promotion code,target account, starting date, ending date, amount redemmed, min coupon txn amount and max coupon txn amount\n        console.log(couponInfo)\n        if(couponInfo.length > 0){\n          redeems[i][\"couponCode\"] = couponInfo[0].couponCode;\n          redeems[i][\"startDate\"] = couponInfo[0].startDate;\n          redeems[i][\"endDate\"] = couponInfo[0].endDate;\n          redeems[i][\"endDate\"] = couponInfo[0].endDate;\n          redeems[i][\"amtPerAddress\"] = couponInfo[0].amtPerAddress;\n          redeems[i][\"minRedeemAmt\"] = couponInfo[0].minRedeemAmt;\n          redeems[i][\"maxRedeemAmt\"] = couponInfo[0].maxRedeemAmt;\n          redeems[i][\"targetAddress\"] = couponInfo[0].targetAddress;\n        }\n      }\n      return redeems;\n}\n\nexport async function GetPromotionBalance(contractInstance,account,promoCode){\n  var details = await contractInstance.checkPromotionalBalance.call(promoCode,{from: account});\n  return details;\n}\n\n"]},"metadata":{},"sourceType":"module"}