{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Table1 extends React.Component {\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider);\n    const chainId = await web3.eth.getChainId();\n    console.log(chainId);\n    this.setState({\n      accountInfo: ''\n    });\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    const accounts = await web3.eth.getAccounts(); // await GetAllPromoCodes(contractInstance);\n\n    var that = this;\n    var codeArray = [];\n    var promoOrigin = [];\n    var promo = [];\n    var promoDate = [];\n    var PromotionLimit = [];\n    promo = await getPromotion(contractInstance, accounts[0]);\n    console.log(promo);\n    this.setState({\n      testData: promo\n    });\n    console.log(\"from Home\");\n    console.log(this.state.testData);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      testData: ''\n    };\n    console.log(\"list data is \" + JSON.stringify(this.props.testData));\n  }\n\n  render() {\n    const tableHeader = this.props.header;\n    const listData = this.state.testData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableHeader.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: listData.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.couponCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(data.dateCreated * 1000).toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.targetAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 126\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Web3.utils.fromWei(data.totalEth, \"ether\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 155\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(data.startDate * 1000).toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 207\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(data.endDate * 1000).toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 258\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Web3.utils.fromWei(data.amtPerAddress, \"ether\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 307\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Web3.utils.fromWei(data.minRedeemAmt, \"ether\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 364\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Web3.utils.fromWei(data.maxRedeemAmt, \"ether\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 420\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Table1;","map":{"version":3,"sources":["/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js"],"names":["React","Component","Web3","Table1","componentDidMount","loadBlockchainData","web3","givenProvider","chainId","eth","getChainId","console","log","setState","accountInfo","contractInstance","Contract","ABI","ADDRESS","accounts","getAccounts","that","codeArray","promoOrigin","promo","promoDate","PromotionLimit","getPromotion","testData","state","constructor","props","JSON","stringify","render","tableHeader","header","listData","map","data","couponCode","Date","dateCreated","toString","targetAddress","utils","fromWei","totalEth","startDate","endDate","amtPerAddress","minRedeemAmt","maxRedeemAmt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACC,SAA3B,CAAsC;AAElCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,kBAAL;AACD;;AAEuB,QAAlBA,kBAAkB,GAAG;AACzB,UAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAASA,IAAI,CAACK,aAAd,CAAb;AACA,UAAMC,OAAO,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,UAAT,EAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,SAAKK,QAAL,CAAc;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAd;AACA,QAAIC,gBAAgB,GAAG,IAAIT,IAAI,CAACG,GAAL,CAASO,QAAb,CAAsBC,GAAtB,EAA2BC,OAA3B,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACG,GAAL,CAASW,WAAT,EAAvB,CANyB,CAOzB;;AAEA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,cAAc,GAAG,EAArB;AAEAF,IAAAA,KAAK,GAAG,MAAMG,YAAY,CAACZ,gBAAD,EAAkBI,QAAQ,CAAC,CAAD,CAA1B,CAA1B;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,SAAKX,QAAL,CAAc;AAACe,MAAAA,QAAQ,EAACJ;AAAV,KAAd;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKiB,KAAL,CAAWD,QAAvB;AAED;;AAEHE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKF,KAAL,GAAa;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBoB,IAAI,CAACC,SAAL,CAAe,KAAKF,KAAL,CAAWH,QAA1B,CAA9B;AACD;;AAIHM,EAAAA,MAAM,GAAE;AACJ,UAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,MAA/B;AACA,UAAMC,QAAQ,GAAG,KAAKR,KAAL,CAAWD,QAA5B;AACA,wBACI;AAAA,6BACA;AAAO,QAAA,KAAK,EAAC,qBAAb;AAAA,gCACE;AAAA,iCACE;AAAA,sBACCO,WAAW,CAACG,GAAZ,CAAiBF,MAAD,iBAAY;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAA5B;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE;AAAA,oBACGC,QAAQ,CAACC,GAAT,CAAcC,IAAD,iBAAU;AAAA,oCAAI;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBAAJ,eAA8B;AAAA,wBAAK,IAAIC,IAAJ,CAASF,IAAI,CAACG,WAAL,GAAmB,IAA5B,EAAkCC,QAAlC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAA9B,eAAqF;AAAA,wBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,oBAArF,eAAkH;AAAA,wBAAK1C,IAAI,CAAC2C,KAAL,CAAWC,OAAX,CAAmBP,IAAI,CAACQ,QAAxB,EAAiC,OAAjC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAlH,eAAsK;AAAA,wBAAK,IAAIN,IAAJ,CAASF,IAAI,CAACS,SAAL,GAAe,IAAxB,EAA8BL,QAA9B;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAtK,eAAyN;AAAA,wBAAK,IAAIF,IAAJ,CAASF,IAAI,CAACU,OAAL,GAAa,IAAtB,EAA4BN,QAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAzN,eAA0Q;AAAA,wBAAKzC,IAAI,CAAC2C,KAAL,CAAWC,OAAX,CAAmBP,IAAI,CAACW,aAAxB,EAAsC,OAAtC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAA1Q,eAAmU;AAAA,wBAAKhD,IAAI,CAAC2C,KAAL,CAAWC,OAAX,CAAmBP,IAAI,CAACY,YAAxB,EAAqC,OAArC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAAnU,eAA2X;AAAA,wBAAKjD,IAAI,CAAC2C,KAAL,CAAWC,OAAX,CAAmBP,IAAI,CAACa,YAAxB,EAAqC,OAArC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAA3X;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvB;AADH;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AA+BH;;AAxEiC;;AA2EtC,eAAejD,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\n\nclass Table1 extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n      }\n\n      async loadBlockchainData() {\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var codeArray = [];\n        var promoOrigin = [];\n        var promo = [];\n        var promoDate = [];\n        var PromotionLimit = [];\n    \n        promo = await getPromotion(contractInstance,accounts[0]);\n        console.log(promo);\n        this.setState({testData:promo});\n        console.log(\"from Home\");\n        console.log(this.state.testData);\n    \n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {testData: ''};\n        console.log(\"list data is \" + JSON.stringify(this.props.testData));\n      }\n\n\n\n    render(){\n        const tableHeader = this.props.header;\n        const listData = this.state.testData;\n        return (\n            <>\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                {tableHeader.map((header) => <th>{header}</th>)}\n                  {/* <th></th>\n                  <th>Promotion Code</th>\n                  <th>Date Created</th>\n                  <th>Target account</th>\n                  <th>Starting Ether Balance</th>\n                  <th>Present Ether Balance</th>\n                  <th>Starting Date</th>\n                  <th>Ending Date</th>\n                  <th>Ether per account</th>\n                  <th>Min Coupon Txn Amount</th>\n                  <th>Max Coupon Txn Amount</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {listData.map((data) => <tr><td>{data.couponCode}</td><td>{new Date(data.dateCreated * 1000).toString()}</td><td>{data.targetAddress}</td><td>{Web3.utils.fromWei(data.totalEth,\"ether\")}</td><td>{new Date(data.startDate*1000).toString()}</td><td>{new Date(data.endDate*1000).toString()}</td><td>{Web3.utils.fromWei(data.amtPerAddress,\"ether\")}</td><td>{Web3.utils.fromWei(data.minRedeemAmt,\"ether\")}</td><td>{Web3.utils.fromWei(data.maxRedeemAmt,\"ether\")}</td></tr>)}\n                {/* {listData.map((data) => <tr><td>{data.couponCode}</td><td>{data.dateCreated}</td><td>{data.targetAddress}</td><td>{data.totalEth}</td><td>{data.startDate}</td><td>{data.endDate}</td><td>{data.amtPerAddress}</td><td>{data.minRedeemAmt}</td><td>{data.maxRedeemAmt}</td></tr>)} */}\n              </tbody>\n            </table>\n        {/* </div>\n            <h1>Who lives in my garage?</h1>\n            <ul>\n            {listData.map((data) => data.sponsorAddress)}\n            </ul> */}\n          </>\n        );\n    }\n}\n\nexport default Table1;"]},"metadata":{},"sourceType":"module"}