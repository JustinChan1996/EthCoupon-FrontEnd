{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Web3 from 'web3';\nimport { ADDRESS, ABI } from './ABI';\nimport { hello, getPromotion } from './helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Table1 extends React.Component {\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider);\n    const chainId = await web3.eth.getChainId();\n    console.log(chainId);\n    this.setState({\n      accountInfo: ''\n    });\n    var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n    const accounts = await web3.eth.getAccounts(); // await GetAllPromoCodes(contractInstance);\n\n    var that = this;\n    var codeArray = [];\n    var promoOrigin = [];\n    var promo = [];\n    var promoDate = [];\n    var PromotionLimit = [];\n    promo = await getPromotion(contractInstance, accounts[0]);\n    console.log(promo);\n    this.setState({\n      testData: promo\n    });\n    console.log(\"from Home\");\n    console.log(this.state.testData);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      testData: ''\n    }; // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n  }\n\n  render() {\n    const tableHeader = this.props.header;\n    var listData = this.state.testData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tableHeader.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 46\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [listData].map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.couponCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.dateCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.targetAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 100\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.totalEth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 129\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 153\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.endDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 178\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.amtPerAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 201\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.minRedeemAmt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 230\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.maxRedeemAmt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 258\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), JSON.stringify(listData), [listData].map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.couponCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.targetAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 96\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.totalEth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 125\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 149\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.endDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 174\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.amtPerAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 197\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.minRedeemAmt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 226\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.maxRedeemAmt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 254\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true);\n  }\n\n}\n\nexport default Table1;","map":{"version":3,"sources":["/Volumes/Data/BlockchainCourse/FrontEnd/ethcoupon-finalproject-react/src/table.js"],"names":["React","Component","Web3","ADDRESS","ABI","hello","getPromotion","Table1","componentDidMount","loadBlockchainData","web3","givenProvider","chainId","eth","getChainId","console","log","setState","accountInfo","contractInstance","Contract","accounts","getAccounts","that","codeArray","promoOrigin","promo","promoDate","PromotionLimit","testData","state","constructor","props","render","tableHeader","header","listData","map","data","couponCode","dateCreated","targetAddress","totalEth","startDate","endDate","amtPerAddress","minRedeemAmt","maxRedeemAmt","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Web3 from 'web3'\nimport {ADDRESS, ABI} from './ABI'\nimport {hello,getPromotion} from './helper';\n\nclass Table1 extends React.Component  {\n\n    componentDidMount() {\n        this.loadBlockchainData();\n      }\n\n      async loadBlockchainData() {\n        const web3 = new Web3(Web3.givenProvider);\n        const chainId = await web3.eth.getChainId();\n        console.log(chainId);\n        this.setState({accountInfo: ''});\n        var contractInstance = new web3.eth.Contract(ABI, ADDRESS);\n        const accounts = await web3.eth.getAccounts();\n        // await GetAllPromoCodes(contractInstance);\n    \n        var that = this;\n        var codeArray = [];\n        var promoOrigin = [];\n        var promo = [];\n        var promoDate = [];\n        var PromotionLimit = [];\n    \n        promo = await getPromotion(contractInstance,accounts[0]);\n        console.log(promo);\n        this.setState({testData:promo});\n        console.log(\"from Home\");\n        console.log(this.state.testData);\n    \n      }\n\n    constructor(props) {\n        super(props);\n        this.state = {testData: ''};\n        // console.log(\"list data is \" + JSON.stringify(this.props.testData));\n      }\n\n\n\n    render(){\n        const tableHeader = this.props.header;\n        var listData = this.state.testData;\n        return (\n            <>\n            <table class=\"table table-striped\">\n              <thead>\n                <tr>\n                {tableHeader.map((header) => <th>{header}</th>)}\n                  {/* <th></th>\n                  <th>Promotion Code</th>\n                  <th>Date Created</th>\n                  <th>Target account</th>\n                  <th>Starting Ether Balance</th>\n                  <th>Present Ether Balance</th>\n                  <th>Starting Date</th>\n                  <th>Ending Date</th>\n                  <th>Ether per account</th>\n                  <th>Min Coupon Txn Amount</th>\n                  <th>Max Coupon Txn Amount</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {/* {[listData].map((data) => <tr><td>{data.couponCode}</td><td>{new Date(data.dateCreated * 1000).toString()}</td><td>{data.targetAddress}</td><td>{Web3.utils.fromWei(Web3.utils.toBN(data.totalEth),\"ether\")}</td><td>{new Date(data.startDate*1000)}</td><td>{new Date(data.endDate*1000).toString()}</td><td>{Web3.utils.fromWei(Web3.utils.toBN(data.amtPerAddress),\"ether\").toString()}</td><td>{Web3.utils.fromWei(Web3.utils.toBN(data.minRedeemAmt),\"ether\")}</td><td>{Web3.utils.fromWei(Web3.utils.toBN(data.maxRedeemAmt),\"ether\")}</td></tr>)} */}\n                {[listData].map((data) => <tr><td>{data.couponCode}</td><td>{data.dateCreated}</td><td>{data.targetAddress}</td><td>{data.totalEth}</td><td>{data.startDate}</td><td>{data.endDate}</td><td>{data.amtPerAddress}</td><td>{data.minRedeemAmt}</td><td>{data.maxRedeemAmt}</td></tr>)}\n              </tbody>\n            </table>\n        {/* </div>\n            <h1>Who lives in my garage?</h1>\n            <ul>\n            {listData.map((data) => data.sponsorAddress)}\n            </ul> */}\n            {JSON.stringify(listData)}\n            {[listData].map((data) => <tr><td>{data.couponCode}</td><td>{data.dateCreated}</td><td>{data.targetAddress}</td><td>{data.totalEth}</td><td>{data.startDate}</td><td>{data.endDate}</td><td>{data.amtPerAddress}</td><td>{data.minRedeemAmt}</td><td>{data.maxRedeemAmt}</td></tr>)}\n\n          </>\n        );\n    }\n}\n\nexport default Table1;"]},"metadata":{},"sourceType":"module"}